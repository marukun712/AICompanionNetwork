// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../lib/generated/prisma"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgvector(map: "vector", schema: "public")]
}

generator zod {
  provider          = "zod-prisma-types"
  useMultipleFiles  = true
  writeBarrelFiles  = false
  useTypeAssertions = true
}

model Room {
  id   String @id @default(uuid())
  name String

  embedding Unsupported("vector")

  furniture  Furniture[]
  companions Companion[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@map("rooms")
}

model Companion {
  id          String @id @default(uuid())
  name        String
  personality String
  story       String
  sample      String
  icon        String

  embedding Unsupported("vector")

  Room   Room   @relation(fields: [roomId], references: [id])
  roomId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("companions")
}

model Furniture {
  id    String @id @default(uuid())
  label String
  x     Int
  y     Int
  z     Int

  embedding Unsupported("vector")

  Room   Room   @relation(fields: [roomId], references: [id])
  roomId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("furniture")
}
